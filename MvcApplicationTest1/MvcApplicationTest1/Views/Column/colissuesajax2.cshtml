@model MvcApplicationTest1.Models.AgileClass
@{
    ViewBag.Title = "AgileBoard";

}



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
<link rel='stylesheet prefetch' href='https://fonts.googleapis.com/icon?family=Material+Icons'>
<link rel='stylesheet prefetch' href='https://fonts.googleapis.com/css?family=Arbutus+Slab'>
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/spectrum/1.8.0/spectrum.min.css'>
<link rel="stylesheet" href="~/css/style.css">
<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
<script>
    $(document).ready(function () {
        $(".Sortable").sortable({
            connectWith: ".connectedSortable",
            update: function (event, ui) {
                var itemIds = "";
                $("#Sortable").find(".taskSingleInline").each(function () {
                    var itemId = $(this).attr("data-issueid");
                    itemIds = itemIds + itemId + ",";
                });

                $.ajax({
                    url: '@Url.Action("UpdateIssuesAjax", "Column")',
                    data: { itemIds : itemIds },
                    type: 'POST',
                    success: function (data) { },
                    error: function (xhr, status, error) { }
                })

            }
        });

    });
</script>




<h2>Agile Boards of Project @ViewBag.projectid</h2>
<div class="dd">

    <div class="container">
        <div id="Sortable" class="dd" style="cursor:pointer">

            @{     int i = 1;
                 foreach (var item in Model.Columns)
                 {
                    <div class="inline">


                        <h2 hidden class="list-group-items taskSingleInline" id="0" data-issueid="0"></h2>

                        <h2 class="list-group-items taskSingleInline kanban__title" id="@(item.colid)" data-issueid="@(item.colid)">@item.name</h2>

                        <ol class="list-group items connectedSortable Sortable kanban To-do">


                            @foreach (var item1 in Model.issues.Where(m => m.status == item.colid))
                            {




                                <li class="list-group-item taskSingleInline dd-item" id="issue@(item1.id)" data-issueid="@(item1.id)">
                                    <h3 class="title"> @Html.ActionLink(Html.DisplayFor(modelItem => item1.keyname).ToHtmlString(), "details", "issues", new { id = item1.id }, null)</h3>
                                    <div class="text" contenteditable="true">  @Html.DisplayFor(modelItem => item1.descreption)</div>
                                    <i class="material-icons" id="label blue">label</i>
                                    <div class="actions">
                                        <i class="material-icons" id="color">palette</i><i class="material-icons">edit</i><i class="material-icons">insert_link</i><i class="material-icons">attach_file</i>
                                    </div>

                                </li>


                            }
                        </ol>
                    </div>

                            i++;
                 }

            }
        </div>
    </div>
</div>
<div><a class="btn btn-primary" href="@Url.Action("Indexproject", "Column", new { id = ViewBag.pid })">Update Positions</a></div>


